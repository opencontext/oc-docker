server_names_hash_bucket_size 64;
proxy_headers_hash_bucket_size 512;
server_names_hash_max_size 512;
large_client_header_buffers 8 64k;
proxy_read_timeout 3600;
proxy_connect_timeout 3600;


# include configs for spamers, bad bots to reject
include /customization/extra.conf;
include /customization/blacklist.conf;

# Rate limit configurations
limit_req_zone $binary_remote_addr zone=all:10m rate=4r/s;
limit_req_zone $binary_remote_addr zone=admin:10m rate=400r/s;

# Rate limit AI using browsers
map $slow_down_client $addr_to_limit {
    0  "";
    1  $binary_remote_addr;  
}
limit_req_zone $addr_to_limit zone=ai_bots:10m rate=1r/m;

map $http_user_agent $limit_bots {
    default '';
    ~*(google|bing|yandex|msnbot|baidu|crawler|robot|turnitin|bot|spider|slurp|teoma|findlink|heritrix|findthatfile|ahrefs) $binary_remote_addr;
}
limit_req_zone $limit_bots zone=bots:10m rate=2r/m;

map $http_user_agent $limit_oai {
    default '';
    ~*(oai|OAI|harvester|Harvester|jakarta|Jakarta|darwin|Darwin|Go-http-client|pyoai|jeroen|python-requests) $binary_remote_addr;
}
limit_req_zone $limit_oai zone=oai:10m rate=2r/m;
limit_req_status 429;

# Connect to the Open Context Django app running with
# Gunicorn. Note, you need to match more than the port
# number, you need match the Docker container NAME where
# we've launched the Open Context Djagno app.
upstream django {
  server oc:8000;
}



server {
    listen 80;
    charset utf-8;
    server_name ${DEPLOY_HOST} www.${DEPLOY_HOST};

    location ^~ /.well-known/acme-challenge/ {
        default_type "text/plain";
        autoindex on;
        allow all;
        root /var/www/certbot/$host;
    }

    access_log /logs/nginx/access.log;
    error_log /logs/nginx/error.log;

    proxy_read_timeout 3600;

    proxy_set_header  X-Forwarded-Protocol  $scheme;
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/ld+json
application/geo+json text/xml application/xml application/xml+rss
text/javascript application/javascript text/turtle;

    # Block the whole 47.82.0.0/16 subnet if necessary
    deny 47.82.0.0/16;


    # block the evil spammers and bad bots
    if ($bad_referer) {
       return 444;
    }
    if ($bad_bot) {
        return 444;
    }
    if ($bad_referer_block) {
        return 444;
    }
    if ($bad_urls1) {
        return 403;
    }
    if ($bad_urls2) {
        return 403;
    }
    if ($bad_urls3) {
        return 403;
    }
    if ($bad_urls4) {
        return 403;
    }
    if ($bad_urls5) {
        return 403;
    }
    if ($bad_urls6) {
        return 403;
    }

    location /.nginx {
        alias /var/www/html/${DEPLOY_HOST};
    }

    location / {
        return 301 https://$host$request_uri;
    }

}


server {
    listen       443 ssl;

    server_name ${DEPLOY_HOST} www.${DEPLOY_HOST};
    access_log /logs/nginx/ssl_access.log;
    error_log /logs/nginx/ssl_error.log;

    proxy_set_header  X-Forwarded-Protocol  $scheme;
    proxy_read_timeout 3600;

    ssl_certificate /etc/symb_link_ssl/fullchain.pem;
    ssl_certificate_key /etc/symb_link_ssl/privkey.pem;

    include /etc/nginx/options-ssl-nginx.conf;

    ssl_dhparam /etc/nginx/sites/ssl/ssl-dhparams.pem;

    include /etc/nginx/hsts.conf;

    # Block the whole 47.82.0.0/16 subnet if necessary
    deny 47.79.118.225;
    deny 47.79.120.246;
    deny 47.79.123.29;
    deny 47.82.11.120;
    deny 47.82.10.2;
    deny 47.82.10.59;
    deny 47.82.10.131;

    # Block specific IP ranges
    deny 47.79.120.0/23;  # Covers 47.79.120.224 and 47.79.121.170
    deny 47.82.0.0/16;  # Blocks the entire 47.82.x.x range if needed

    # block the evil spammers and bad bots
    if ($bad_referer) {
       # return 444;
    }
    if ($bad_bot) {
        return 444;
    }
    if ($bad_agents) {
        return 444;
    }
    if ($bad_referer_block) {
        # return 444;
    }
    if ($bad_urls1) {
        return 403;
    }
    if ($bad_urls2) {
        return 403;
    }
    if ($bad_urls3) {
        return 403;
    }
    if ($bad_urls4) {
        return 403;
    }
    if ($bad_urls5) {
        return 403;
    }
    if ($bad_urls6) {
        return 403;
    }

    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/ld+json
application/geo+json text/xml application/xml application/xml+rss
text/javascript application/javascript text/html text/turtle;

    location /.nginx {
        root     /var/www/html/opencontext.org;
    }

    # See the nginx docker-compose.yml where we
    # provide this volume mapping to "static"
    location  /static/ {
        # Note: No rate limit
        add_header Cache-Control "max-age=86400, public";
        autoindex on;
        alias  /static_root/;
    }

    location /editorial/ {
        # No rate limits for editorial
        limit_req zone=admin burst=30 nodelay;
        try_files $uri @proxy_to_django_oc;
    }

    location / {
        # rate limit
        limit_req zone=all burst=30 nodelay;
        # DEACTIVATE 2024-02-11: limit_req zone=ai_bots burst=3;
        limit_req zone=bots burst=3;
        limit_req zone=oai burst=3;
        try_files $uri @proxy_to_django_oc;
    }

    location @proxy_to_django_oc {
        proxy_pass http://django;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $server_name;

        if ($request_uri ~* \.(json)){
            # this DOES work
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods GET;
        }

        if ($http_accept ~* \/(json)){
            # this DOES work
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods GET;
        }
        if ($http_accept ~* \/(ld+json)){
            # this DOES work
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods GET;
        }
        if ($http_accept ~* \/(vnd.geo+json)){
            # this DOES work
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods GET;
        }
    }


}
