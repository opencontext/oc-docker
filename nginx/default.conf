server_names_hash_bucket_size 64;
proxy_headers_hash_bucket_size 512;
server_names_hash_max_size 512;
large_client_header_buffers 8 64k;
proxy_read_timeout 3600;
proxy_connect_timeout 3600;


# Rate limit configurations
limit_req_zone $binary_remote_addr zone=all:10m rate=4r/s;
limit_req_zone $binary_remote_addr zone=admin:10m rate=400r/s;

map $http_user_agent $limit_bots {
    default '';
    ~*(google|bing|yandex|msnbot|baidu|crawler|robot) $binary_remote_addr;
}
limit_req_zone $limit_bots zone=bots:10m rate=2r/m;

map $http_user_agent $limit_oai {
    default '';
    ~*(oai|OAI|harvester|Harvester|jakarta|Jakarta|darwin|Darwin|Go-http-client|pyoai|jeroen|python-requests) $binary_remote_addr;
}
limit_req_zone $limit_oai zone=oai:10m rate=2r/m;


# Connect to the Open Context Django app running with 
# Gunicorn. Note, you need to match more than the port
# number, you need match the Docker container NAME where
# we've launched the Open Context Djagno app.
upstream django {
  server oc:8000;
}



server {
    listen 80;
    charset utf-8;
    server_name staging.opencontext.org;

    access_log /logs/nginx/access.log;
    error_log /logs/nginx/error.log;
    proxy_read_timeout 3600;

    proxy_set_header  X-Forwarded-Protocol  $scheme;
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/vnd.geo+json application/ld+json application/x-javascript text/xml application/xml application/xml+rss text/turtle text/javascript;


    location /.well-known/acme-challenge/ {
        root /var/www/certbot/staging.opencontext.org;
    }

    location / {
        return 301 https://$host$request_uri;
    }

}


server {
    listen       443 ssl;
    
    server_name  staging.opencontext.org;
    access_log /logs/nginx/ssl_access.log;
    error_log /logs/nginx/ssl_error.log;

    proxy_set_header  X-Forwarded-Protocol  $scheme;
    proxy_read_timeout 3600;

    ssl_certificate /etc/nginx/ssl/dummy/staging.opencontext.org/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/dummy/staging.opencontext.org/privkey.pem;

    include /etc/nginx/options-ssl-nginx.conf;

    ssl_dhparam /etc/nginx/ssl/ssl-dhparams.pem;

    include /etc/nginx/hsts.conf;


    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/ld+json
application/x-javascript text/xml application/xml application/xml+rss
text/javascript text/turtle;

    location /.nginx {
        root     /var/www/html/staging.opencontext.org;
    }

    # See the nginx docker-compose.yml where we
    # provide this volume mapping to "static"
    location  /static/ {
        # Note: No rate limit
        autoindex on;
        alias  /open-context-py/static/;
    }

    location / {
        # rate limit
        limit_req zone=all burst=3;
        limit_req zone=bots burst=3;
        limit_req zone=oai burst=3;
        try_files $uri @proxy_to_django_oc;
    }

    location ^~ /editorial/ {
        # No rate limits for editorial
        limit_req zone=admin burst=20 nodelay;
        try_files $uri @proxy_to_django_oc;
    }

    location @proxy_to_django_oc {
        proxy_pass http://django;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $server_name;

        if ($request_uri ~* \.(json)){
            # this DOES work
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods GET;
        }

        if ($http_accept ~* \/(json)){
            # this DOES work
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods GET;
        }
        if ($http_accept ~* \/(ld+json)){
            # this DOES work
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods GET;
        }
        if ($http_accept ~* \/(vnd.geo+json)){
            # this DOES work
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods GET;
        }
    }


}
