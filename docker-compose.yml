version: "3.9"

services:

  redis:
    container_name: redis
    image: "redis:6-alpine"
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - "redisdata:/data"
    command: "redis-server"
    networks:
      - oc_net

  oc:
    container_name: oc
    image: opencontext/oc
    restart: always
    env_file:
      - ./.env
    environment:
      - SSH_PRIVATE_KEY=${SSH_PRIVATE_KEY}
      - REDIS_HOST=redis
      - DEBUG="0"
      - GIT_BRANCH=${GIT_BRANCH}
    build:
      context: .
      dockerfile: oc/Dockerfile
      args:
        GIT_BRANCH: ${GIT_BRANCH}
    stdin_open: true # docker run -i
    tty: true        # docker run -t
    ports:
      - "5432:5432"
      - "8983:8983"
    expose:
      - 8000
    links:
      - redis:redis
    volumes:
      -  $PWD:/deploy_files
      - ./logs/open-context-py:/open-context-py/logs
      - ./static:/open-context-py/static
      - ./secrets:/oc-secrets
      - oc-static:/static_root
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "10"
    command:
      - run_oc
    depends_on:
      - redis
    networks:
      - oc_net

  oc_worker:
    container_name: oc_worker
    build: .
    image: opencontext/oc
    environment:
      COMPOSE_PROJECT_NAME: "${COMPOSE_PROJECT_NAME}"
    restart: unless-stopped
    command: python manage.py rqworker high
    links:
      - redis:redis
    logging:
      driver: "json-file"
      options:
        max-size: "1k"
        max-file: "3"
    depends_on:
      - oc
      - redis
    networks:
      - oc_net

  nginx:
    container_name: nginx
    build:
      context: .
      dockerfile: nginx/Dockerfile
    image: opencontext/nginx
    env_file:
      - ./.env
    environment:
      - DOMAINS="${DOMAINS}"
      - DOMAINS_WWW="${DOMAINS_WWW}"
      - DEPLOY_HOST="${DEPLOY_HOST}"
      - CERT_PATH="${CERT_PATH}"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "10"
    volumes:
      - logs_nginx:/logs/nginx
      - ./static:/open-context-py/static:rw
      - oc-static:/static_root
      - nginx_ssl:/etc/nginx/ssl
      - certbot_certs:/etc/letsencrypt
      - oc_certbot:$CERT_PATH
      - ./html:$NGINX_HTML_PATH
    ports:
      - "8000:8000"
      - "80:80"
      - "443:443"
    restart: always
    networks:
      - oc_net

  certbot:
    build: ./certbot
    image: opencontext/certbot
    env_file:
      - ./.env
    volumes:
      - certbot_certs:/etc/letsencrypt
      - oc_certbot:$CERT_PATH
    depends_on:
      - nginx
    logging:
      driver: "json-file"
      options:
        max-size: "1k"
        max-file: "3"
    networks:
      - oc_net

  cron:
    container_name: cron
    build: ./cron
    image: opencontext/cron
    environment:
      COMPOSE_PROJECT_NAME: "${COMPOSE_PROJECT_NAME}"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./:/workdir:ro
    restart: unless-stopped
    depends_on:
      - nginx
      - certbot
    logging:
      driver: "json-file"
      options:
        max-size: "1k"
        max-file: "3"
    networks:
      - oc_net

networks:
  oc_net:
    driver: bridge
    name: oc_net

volumes:
  logs_nginx:
    external: true
  nginx_ssl:
    external: true
  certbot_certs:
    external: true
  oc_certbot:
    external: true
  redisdata:
    external: true
  oc-static:
