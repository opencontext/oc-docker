version: "3"

services:
  nginx:
    build: ./nginx
    image: opencontext/nginx
    env_file:
      - ./config.env
    volumes:
      - ./logs/nginx:/logs/nginx
      - opencontext_nginx_ssl:/etc/nginx/ssl
      - opencontext_certbot_certs:/etc/letsencrypt
      - staging_certbot:/var/www/certbot/staging.opencontext.org
      - ./html:/var/www/html/staging.opencontext.org
    ports:
      - "80:80"
      - "443:443"
    restart: always

  oc:
    container_name: oc
    image: opencontext/oc
    restart: always
    build:
      context: .
      dockerfile: oc/Dockerfile
    environment:
      - SSH_PRIVATE_KEY=${SSH_PRIVATE_KEY}
    stdin_open: true # docker run -i
    network_mode: "host"
    tty: true        # docker run -t
    volumes:
      -  $PWD:/deploy_files
    command:
      "gunicorn -w 2 -b 0.0.0.0:8000 --chdir /open-context-py opencontext_py.wsgi:application --reload --timeout 3600"
    

  certbot:
    build: ./certbot
    image: opencontext/certbot
    env_file:
      - ./config.env
    volumes:
      - opencontext_certbot_certs:/etc/letsencrypt
      - staging_certbot:/var/www/certbot/staging.opencontext.org
    depends_on:
      - nginx

  cron:
    build: ./cron
    image: opencontext/cron
    environment:
      COMPOSE_PROJECT_NAME: "${COMPOSE_PROJECT_NAME}"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./:/workdir:ro
    depends_on:
      - nginx
      - certbot

volumes:
  logs_nginx:
    external: true
  opencontext_nginx_ssl:
    external: true
  opencontext_certbot_certs:
    external: true
  staging_certbot:
    external: true