version: "3"

services:

  redis:
    container_name: redis
    image: "redis:6-alpine"
    restart: always
    ports:
      - "6379"
    volumes:
      - "redisdata:/data"
    command: "redis-server"

  oc:
    container_name: oc
    image: opencontext/oc
    restart: always
    build:
      context: .
      dockerfile: oc/Dockerfile
    environment:
      - SSH_PRIVATE_KEY=${SSH_PRIVATE_KEY}
      - REDIS_HOST=redis
    stdin_open: true # docker run -i
    tty: true        # docker run -t
    ports:
      - "5432:5432"
      - "8983:8983"
    expose:
      - 8000
    links:
      - redis:redis
    volumes:
      -  $PWD:/deploy_files
      - ./logs/open-context-py:/open-context-py/logs
      - ./static:/open-context-py/static
    command: bash -c "
        python /open-context-py/manage.py rqworker high
        && gunicorn -w 2 -b 0.0.0.0:8000 --chdir /open-context-py opencontext_py.wsgi:application --reload --timeout 3600"
    depends_on:
      - redis

  nginx:
    build: ./nginx
    image: opencontext/nginx
    env_file:
      - ./config.env
    volumes:
      - ./logs/nginx:/logs/nginx
      - ./static:/open-context-py/static
      - opencontext_nginx_ssl:/etc/nginx/ssl
      - opencontext_certbot_certs:/etc/letsencrypt
      - staging_certbot:/var/www/certbot/staging.opencontext.org
      - ./html:/var/www/html/staging.opencontext.org
    ports:
      - "8000:8000"
      - "80:80"
      - "443:443"
    restart: always
    depends_on:
      - oc
    
  certbot:
    build: ./certbot
    image: opencontext/certbot
    env_file:
      - ./config.env
    volumes:
      - opencontext_certbot_certs:/etc/letsencrypt
      - staging_certbot:/var/www/certbot/staging.opencontext.org
    depends_on:
      - nginx

  cron:
    build: ./cron
    image: opencontext/cron
    environment:
      COMPOSE_PROJECT_NAME: "${COMPOSE_PROJECT_NAME}"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./:/workdir:ro
    depends_on:
      - nginx
      - certbot

volumes:
  logs_nginx:
    external: true
  opencontext_nginx_ssl:
    external: true
  opencontext_certbot_certs:
    external: true
  staging_certbot:
    external: true
  redisdata:
    external: true